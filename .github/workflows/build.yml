name: Build

on: [push, pull_request]

jobs:
  macos-build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Install dependencies
        run: |
          brew update || brew update
          brew upgrade
          brew install cmake qt5 ftgl jack pkg-config fluid-synth
          ls -R /usr/local/Cellar/fluid-synth/
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_PREFIX_PATH="$(brew --prefix qt)"
          make
          make install-translations
          $(brew --prefix qt)/bin/macdeployqt build/pianobooster.app -dmg
          find .
          echo "Done!"
          mv build/*dmg ../PianoBooster.dmg
          ls -lh ../PianoBooster.dmg
      - name: Upload Mac Build
        uses: actions/upload-artifact@v2
        with:
          name: mac-build
          path: PianoBooster.dmg

#  windows-build:
#    runs-on: windows-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2.0.0
#      - name: Install dependencies
#        uses: lukka/run-vcpkg@v4
#        with:
#          vcpkgDirectory: ${{ github.workspace }}/vcpkg
#          vcpkgArguments: fluidsynth qt5-base qt5-tools freetype ftgl
#          vcpkgGitUrl: 'https://github.com/microsoft/vcpkg.git'
#          vcpkgGitCommitId: '56fffbe49dfb4dd8fae0940f272c5fd2b86be991'
#          vcpkgTriplet: x64-windows
#      - name:
#        run: |
#          mkdir build
#          cd build
#          cmake .. -DWITH_INTERNAL_FLUIDSYNTH=OFF -DCMAKE_TOOLCHAIN_FILE="${GITHUB_WORKSPACE}"/vcpkg/scripts/buildsystems/vcpkg.cmake
#          cmake --build .
#          find .
#        shell: bash
#

#  deploy:
#    runs-on: ubuntu-latest
#    needs: [macos-build, linux-build]
#    strategy:
#      matrix:
#        env:
#          - {
#            ARTIFACT: linux-build,
#            ASSET_PATH: PianoBooster-x86_64.AppImage,
#            ASSET_NAME: PianoBooster-x86_64-$$.AppImage,
#            ASSET_CONTENT_TYPE: application/appimage
#          }
#          - {
#            ARTIFACT: mac-build,
#            ASSET_PATH: PianoBooster.dmg,
#            ASSET_NAME: PianoBooster_$$.dmg,
#            ASSET_CONTENT_TYPE: application/dmg
#          }
#    env: ${{ matrix.env }}
#    steps:
#    - name: Publish snapshot build
#      #if: contains(github.ref, 'develop')
#      run: |
#        find .
#        ls -la
#        set
#    - name: Download build
#      uses: actions/download-artifact@v2
#      with:
#        name: ${{ env.ARTIFACT }}
#    - name: Snapshot Release
#      uses: WebFreak001/deploy-nightly@v1.0.1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: https://uploads.github.com/repos/winder/PianoBooster/releases/32197618/assets{?name,label}
#        release_id: 32197618
#        asset_path: ${{ env.ASSET_PATH }}
#        asset_name: ${{ env.ASSET_NAME }}
#        asset_content_type: ${{ env.ASSET_CONTENT_TYPE }}
#        max_releases: 30

##    - name: Create release
##      if: contains(github.ref, 'master')
##      run: |
##        find .
##        ls -la


